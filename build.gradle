plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'org.jmailen.kotlinter' version '3.0.0'
    id 'com.github.johnrengelman.shadow' version '8.0.0'
}

group 'no.nav.crm.kafka.activity'
version '0.1'

jar {
    manifest {
        attributes 'Main-Class': 'no.nav.crm.kafka.activity.MainKt'
    }
}

shadowJar {
    archiveBaseName.set('app')
    archiveClassifier.set('')
}

application {
    mainClassName = 'no.nav.crm.kafka.activity.MainKt'
}

run {
    environment "MS_BETWEEN_WORK", "20000"
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        url "https://repo1.maven.org/maven2"
        url "https://packages.confluent.io/maven"
    }
  
    ["maven-release"].each { repo ->
        String token = System.getenv("GITHUB_TOKEN") ?: project.findProperty("githubPassword")
        if (!token) throw new NullPointerException("Missing token, you have to set GITHUB_TOKEN or githubPassword")
        maven {
            url = uri("https://maven.pkg.github.com/navikt/$repo")
            credentials {
                username = 'x-access-token'
                password = token
            }
        }
    }
}

configurations {
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.+"

    implementation group: 'com.pontusvision.salesforce', name: 'emp-connector', version: '0.0.2'

    implementation "org.http4k:http4k-server-apache:3.251.0"
    implementation "org.http4k:http4k-client-apache:3.251.0"

    implementation "org.apache.kafka:kafka-clients:7.5.1-ce"

    implementation "io.github.microutils:kotlin-logging:1.7.9"
    implementation "ch.qos.logback:logback-classic:1.4.14"
    implementation "net.logstash.logback:logstash-logback-encoder:7.4"

    implementation "io.prometheus:simpleclient_common:0.8.1"
    implementation "io.prometheus:simpleclient_hotspot:0.8.1"

    implementation "org.apache.commons:commons-compress:1.24.0" //transient http4k-apache
    implementation "org.apache.httpcomponents:httpclient:4.5.13" //Desired transient httpclient to http4k-apache
    implementation "org.xerial.snappy:snappy-java:1.1.10.4" //Desired transient snappy to kafka-clients above
    implementation "org.eclipse.jetty:jetty-http:9.4.53.v20231009" //Desired transient jetty for cometd

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.cometd.java:cometd-java-server:7.0.10'
    testImplementation 'org.cometd.java:cometd-java-client:4.0.9'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    test.kotlin.srcDirs += 'src/test/kotlin'
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}
