name: Deploy Push Topics to Salesforce

on:
  workflow_dispatch:
  push:
    branches: main
    paths:
      - .topics/push-topics/**
      - "!.topics/push-topics/template.cls"

jobs:
  # ----------------------------- #
  # ------- setup matrix -------- #
  # ----------------------------- #

  setup-matrix:
    name: Setup Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      emptyMatrix: ${{ steps.set-matrix.outputs.emptyMatrix }}
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # set matrix
      - name: Set Matrix
        id: set-matrix
        run: |
          MATRIX=$(git diff-tree --diff-filter=d --no-commit-id --name-only -r ${{ github.event.before }} ${{ github.sha }} | grep .topics/push-topics/ | cut -d '/' -f 3 | sort -u | paste -d',' -s )
          echo ----------------------------

          # if no changed topics
          if [[  -z "${MATRIX// }" ]]; then
            echo "No topics were changed"
            echo "::set-output name=emptyMatrix::true"
            echo "::set-output name=matrix::[]"
          else
            JSON=$(jq -c -n --arg v $MATRIX '{"topic": $v|split(",")}')
            
            echo "Changed topics: $MATRIX"
            echo "JSON matrix: $JSON"
            
            echo "::set-output name=matrix::$JSON"
            echo "::set-output name=emptyMatrix::false"
          fi

          # if manual deployment, add all to matrix
          if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            echo Manual deployment, deploy all topics
            
            MATRIX=$(for i in $(ls .topics/push-topics/); do echo ${i%%/}; done | cut -d '/' -f 3 | paste -d',' -s )
            echo "Topics to deploy: $MATRIX"

            JSON=$(jq -c -n --arg v $MATRIX '{"topic": $v|split(",")}')
            echo "JSON matrix: $JSON"

            echo "::set-output name=matrix::$JSON"
            echo "::set-output name=emptyMatrix::false"
          fi

  # ----------------------------- #
  # ------- deploy preprod ------ #
  # ----------------------------- #

  deploy-preprod:
    name: Deploy Preprod
    needs: setup-matrix
    runs-on: ubuntu-latest
    if: needs.setup-matrix.outputs.emptyMatrix == 'false'
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v2

      # Install SFDX
      - name: Authorize SFDX
        uses: sfdx-actions/setup-sfdx@v1

      # Authenticate preprod
      - name: Authenticate preprod
        run: |
          echo ${{ secrets.PREPROD_SFDX_URL }} > ./PREPROD_SFDX_URL.txt
          sfdx auth:sfdxurl:store -f ./PREPROD_SFDX_URL.txt -a preprod -s
          rm -f ./PREPROD_SFDX_URL.txt

      # Upsert Push Topic
      - name: Upsert Push Topic
        if: matrix.topic != 'template.cls'
        run: |
          sfdx force:apex:execute -u preprod -f .topics/push-topics/${{ matrix.topic }} --json | tee output

          if [ $(cat output | jq '.result.success') == "false" ]; then
            exit 125
          fi

  # ----------------------------- #
  # ----- deploy production ----- #
  # ----------------------------- #

  deploy-prod:
    name: Deploy Production
    needs: setup-matrix
    runs-on: ubuntu-latest
    if: needs.setup-matrix.outputs.emptyMatrix == 'false'
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v2

      # Install SFDX
      - name: Authorize SFDX
        uses: sfdx-actions/setup-sfdx@v1

      # Authenticate prod
      - name: Authenticate prod
        run: |
          echo ${{ secrets.PROD_SFDX_URL }} > ./PROD_SFDX_URL.txt
          sfdx auth:sfdxurl:store -f ./PROD_SFDX_URL.txt -a prod -s
          rm -f ./PROD_SFDX_URL.txt

      # Upsert Push Topic
      - name: Upsert Push Topic
        if: matrix.topic != 'template.cls'
        run: |
          sfdx force:apex:execute -u prod -f .topics/push-topics/${{ matrix.topic }} --json | tee output

          if [ $(cat output | jq '.result.success') == "false" ]; then
            exit 125
          fi
