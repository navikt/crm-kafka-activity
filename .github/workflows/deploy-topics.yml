name: Deploy Kafka Topics to Aiven

on:
  workflow_dispatch:
  push:
    paths:
      - .topics/kafka-topics/**
      - "!.topics/kafka-topics/template/**"

jobs:
  # ----------------------------- #
  # ------- setup matrix -------- #
  # ----------------------------- #

  setup-matrix:
    name: Setup Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      emptyMatrix: ${{ steps.set-matrix.outputs.emptyMatrix }}
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # set matrix
      - name: Set Matrix
        id: set-matrix
        run: |
          MATRIX=$(git diff-tree --diff-filter=d --no-commit-id --name-only -r ${{ github.event.before }} ${{ github.sha }} | grep .topics/kafka-topics/ | cut -d '/' -f 3 | sort -u | paste -d',' -s )
          echo ----------------------------

          # if no changed topics
          if [[  -z "${MATRIX// }" ]]; then
            echo "No topics were changed"
            echo "::set-output name=emptyMatrix::true"
            echo "::set-output name=matrix::[]"
          else
            JSON=$(jq -c -n --arg v $MATRIX '{"topic": $v|split(",")}')
            
            echo "Changed topics: $MATRIX"
            echo "JSON matrix: $JSON"
            
            echo "::set-output name=matrix::$JSON"
            echo "::set-output name=emptyMatrix::false"
          fi

          # if manual deployment, add all to matrix
          if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            echo ----------------------------
            echo Manual deployment, deploy all topics
            
            MATRIX=$(for i in $(ls -d .topics/kafka-topics/*/); do echo ${i%%/}; done | cut -d '/' -f 3 | paste -d',' -s )
            echo "Topics to deploy: $MATRIX"

            JSON=$(jq -c -n --arg v $MATRIX '{"topic": $v|split(",")}')
            echo "JSON matrix: $JSON"

            echo "::set-output name=matrix::$JSON"
            echo "::set-output name=emptyMatrix::false"
          fi

  # ----------------------------- #
  # ------- deploy preprod ------ #
  # ----------------------------- #

  deploy-dev:
    name: Deploy Dev
    needs: setup-matrix
    runs-on: ubuntu-latest
    if: needs.setup-matrix.outputs.emptyMatrix == 'false'
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      # checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # deploy to dev gcp
      - name: deploy to dev
        if: matrix.topic != 'template'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .topics/kafka-topics/${{ matrix.topic }}/topic.yml
          VARS: .topics/kafka-topics/${{ matrix.topic }}/dev-vars.yml
          PRINT_PAYLOAD: true

  # ----------------------------- #
  # ----- deploy production ----- #
  # ----------------------------- #

  deploy-prod:
    name: Deploy Production
    needs: setup-matrix
    runs-on: ubuntu-latest
    if: needs.setup-matrix.outputs.emptyMatrix == 'false' && github.ref == 'refs/heads/main'
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      # checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # deploy to prod gcp
      - name: deploy to prod
        if: matrix.topic != 'template'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .topics/kafka-topics/${{ matrix.topic }}/topic.yml
          VARS: .topics/kafka-topics/${{ matrix.topic }}/prod-vars.yml
          PRINT_PAYLOAD: true
